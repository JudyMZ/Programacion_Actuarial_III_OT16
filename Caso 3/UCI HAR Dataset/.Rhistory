plot(ns_res, col=coral3)
plot(ns_res, col=2)
ns_res <- estim_nss(datazeroyields, "ns", tauconstr = c(0.2, 6, 0.1),col=2)
plot(ns_res)
plot(ns_res,col=chocolate=3)
box.plot(ns_res)
boxplot(ns_res)
plot(ns_res,col="chocolate3")
plot(ns_res,col="blue")
plot(ns_res,col=33)
plot(ns_res,col=chocolate=3)
plot(ns_res,col=chocolate3)
plot(ns_res,col="chocolate=3")
?pi
a<- .5
x<-sin(a)
y<-cos(a)
z<-tan(a)
plot(x,y,z)
plot(ns_res,col=heat.colors(12))
plot(ns_res,col=heat.colors(33))
?estim_nss
?termstrc
library("termstrc")
data("govbonds")
data
x<-data("govbonds")
x
?data()
govbonds
govbonds
str(govbonds$GERMANY)
govbonds$GERMANY
?estim_nss.zeroyields
?estim_nss
ns_res$spsearch$GERMANY
ns_res <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"),
matrange = c(0, 30), method = "ns", tauconstr = list(c(0.2, 5, 0.1),
c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
ns_res$spsearch$GERMANY
str(govbonds$GERMANY)
str(govbonds$Spain)
data("govbonds")
govbonds
class(govbonds)
?par
class(ns_res$spsearch$GERMANY)
ns_res$spsearch$GERMANY
plot(ns_res)
plot(ns_res, multiple = TRUE)
?estim_cs
cs_res2 <- estim_cs(rm_bond(govbonds, "FRANCE",
c("FR0000571044", "FR0000571085")), "FRANCE", matrange = c(0, 30))
cs_res <- estim_cs(govbonds, "FRANCE", matrange = c(0, 30))
cs_res
plot(cs_res,errors="price")
plot(cs_res)
data("zyields")
x <- zyields
x
maturities <- c(1/12, 3/12, 6/12, 9/12, 1:12)
yields <- as.matrix(x[, 2:ncol(x)])
yields
plot(ns_res$spsearch$FRANCE, main = "FRANCE")
plot(cs_res)
dl_res <- estim_nss(datadyncouponbonds, "GERMANY", method = "dl",
lambda = 1/3)
?`termstrc-package`
?termstrc
library("termstrc")
data("govbonds")
govbonds
class(govbonds)
str(govbonds$GERMANY)
ns_res <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"),
matrange = c(0, 30), method = "ns", tauconstr = list(c(0.2, 5, 0.1),
c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
class(ns_res$spsearch$GERMANY)
par(mfrow = c(1, 3))
plot(ns_res$spsearch$GERMANY, main = "GERMANY")
plot(ns_res$spsearch$AUSTRIA, main = "AUSTRIA")
plot(ns_res$spsearch$FRANCE, main = "FRANCE")
ns_res <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"),
matrange = c(0, 30), method = "ns")
par(mfrow = c(1, 1))
plot(ns_res$spsearch$GERMANY, main = "GERMANY")
plot(ns_res$spsearch$AUSTRIA, main = "AUSTRIA")
plot(ns_res$spsearch$FRANCE, main = "FRANCE")
ns_res
plot(ns_res, multiple = TRUE)
plot(ns_res)
3
plot(ns_res)
cs_res <- estim_cs(govbonds, "FRANCE", matrange = c(0, 30))
cs_res
cs_res <- estim_cs(govbonds, "FRANCE", matrange = c(0, 30))
cs_res
summary(cs_res)
plot(cs_res)
plot(cs_res,errors="price")
plot(cs_res)
par(mfrow=c(1,2))
plot(cs_res)
plot(cs_res,errors="price")
par(mfrow=c(1,1))
plot(cs_res)
plot(cs_res,errors="price")
par(mfrow=c(1,2))
plot(cs_res)
plot(cs_res,errors="price")
par(mfrow=c(1,1))
cs_res2 <- estim_cs(rm_bond(govbonds, "FRANCE",
c("FR0000571044", "FR0000571085")), "FRANCE", matrange = c(0, 30))
summary(cs_res2)
data("zyields")
maturities <- c(1/12, 3/12, 6/12, 9/12, 1:12)
maturities
maturities <- c(1, 2, 3, 4, 1:12)
maturities
maturities <- c(2, 7, 8, 3, 1:12)
maturities
yields <- as.matrix(x[, 2:ncol(x)])
maturities <- c(1/12, 3/12, 6/12, 9/12, 1:12)
yields <- as.matrix(x[, 2:ncol(x)])
yields
plot(ns_res$spsearch$GERMANY, main = "GERMANY")
ns_res <- estim_nss(govbonds,"GERMANY",
matrange = c(0, 30), method = "ns", tauconstr = list(c(0.2, 5, 0.1),
c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
plot(ns_res$spsearch$GERMANY, main = "GERMANY")
plot(ns_res)
plot(ns_res, multiple = TRUE)
plot(ns_res, multiple = TRUE)
ns_res <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"),
matrange = c(0, 30), method = "ns", tauconstr = list(c(0.2, 5, 0.1),
c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
library("termstrc")
data("govbonds")
govbonds
curva <- function(b){
if( b=="GERMANY"){
#estimar la curva de rendimiento de cupón cero para los tres países incluidos con el método de Nelson y Siegel
nelson <- estim_nss(govbonds, "GERMANY", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY") #Muestra los parametros de inicio
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="AUSTRIA"){
nelson <- estim_nss(govbonds, "AUSTRIA", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="FRANCE"){
nelson <- estim_nss(govbonds, "FRANCE", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$FRANCE, main = "FRANCE")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
}else if (b=="GERMANY/FRANCE/AUSTRIA"){
nelson <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"), method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(2, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY")
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
plot(nelson$spsearch$FRANCE, main = "FRANCE")
plot(nelson$spsearch)
nelson
summary(nelson)
plot(nelson, multiple = F) #muestra las curvas de rendimiento estimadas de cupón cero
}
}
#Conjunto de datos de rendimientos cero alemanes
data("zyields")
x <- zyields
vencimiento <- c(1/12, 3/12, 6/12, 9/12, 1:12)
rendimiento <- as.matrix(x[, 2:ncol(x)])
fecha <- as.Date(x[, 1], format = "%d.%m.%Y")
trcero <- zeroyields(vencimiento, rendimiento, fecha) #trcero tasa de rendimiento cero
trcero
curva2 <- function(x){
if( x=="nelsons"){
nels <- estim_nss(trcero , "ns", tauconstr = c(0.2, 6, 0.1))
plot(param(nels)) #evolución del parámetro del modelo de Nelson / Siegel
plot(nels) #Evolución de la curva de rendimiento estimada de cupón cero
} else if (x=="svensson"){
sven <- estim_nss(trcero , "sv", tauconstr = c(0.2, 5, 0.1, 0.5))
plot(param(sven)) #evolución del parámetro del modelo de Svensson
plot(sven) #Evolución de la curva de rendimiento estimada de cupón cero
}
}
curva("GERMANY")
curva("GERMANY/FRANCE/AUSTRIA")
data("govbonds")
govbonds
str2 <- function(b){
if( b=="GERMANY"){
nelson <- estim_nss(govbonds, "GERMANY", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY")
nelson
summary(nelson)
plot(nelson, multiple = TRUE)
} else if (b=="AUSTRIA"){
nelson <- estim_nss(govbonds, "AUSTRIA", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
nelson
summary(nelson)
plot(nelson, multiple = TRUE)
} else if (b=="FRANCE"){
nelson <- estim_nss(govbonds, "FRANCE", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$FRANCE, main = "FRANCE")
nelson
summary(nelson)
plot(nelson, multiple = TRUE)
}else if (b=="GERMANY/FRANCE/AUSTRIA"){
nelson <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"), method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(2, 2))
#plot(nelson$spsearch$GERMANY, main = "GERMANY")
#plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
#plot(nelson$spsearch$FRANCE, main = "FRANCE")
#plot(nelson$spsearch)
nelson
summary(nelson)
plot(nelson, multiple = F)}
}
data("zyields")
x <- zyields
maturities <- c(1/12, 3/12, 6/12, 9/12, 1:12)
yields <- as.matrix(x[, 2:ncol(x)])
dates <- as.Date(x[, 1], format = "%d.%m.%Y")
datazeroyields <- zeroyields(maturities, yields, dates)
datazeroyields
library("termstrc")
data("govbonds")
govbonds
str2 <- function(b){
if( b=="GERMANY"){
nelson <- estim_nss(govbonds, "GERMANY", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY")
nelson
summary(nelson)
plot(nelson, multiple = TRUE)
} else if (b=="AUSTRIA"){
nelson <- estim_nss(govbonds, "AUSTRIA", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
nelson
summary(nelson)
plot(nelson, multiple = TRUE)
} else if (b=="FRANCE"){
nelson <- estim_nss(govbonds, "FRANCE", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$FRANCE, main = "FRANCE")
nelson
summary(nelson)
plot(nelson, multiple = TRUE)
}else if (b=="GERMANY/FRANCE/AUSTRIA"){
nelson <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"), method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(2, 2))
#plot(nelson$spsearch$GERMANY, main = "GERMANY")
#plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
#plot(nelson$spsearch$FRANCE, main = "FRANCE")
#plot(nelson$spsearch)
nelson
summary(nelson)
plot(nelson, multiple = F)}
}
str2("GERMANY/FRANCE/AUSTRIA")
library("termstrc")
data("govbonds")
govbonds
curva <- function(b){
if( b=="GERMANY"){
#estimar la curva de rendimiento de cupón cero para los tres países incluidos con el método de Nelson y Siegel
nelson <- estim_nss(govbonds, "GERMANY", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY") #Muestra los parametros de inicio
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="AUSTRIA"){
nelson <- estim_nss(govbonds, "AUSTRIA", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="FRANCE"){
nelson <- estim_nss(govbonds, "FRANCE", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$FRANCE, main = "FRANCE")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
}else if (b=="G/A/F"){
nelson <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"), method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 1))
plot(nelson$spsearch$GERMANY, main = "GERMANY")
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
plot(nelson$spsearch$FRANCE, main = "FRANCE")
#plot(nelson$spsearch)
nelson
summary(nelson)
plot(nelson, multiple = T) #muestra las curvas de rendimiento estimadas de cupón cero
}
}
#Conjunto de datos de rendimientos cero alemanes
data("zyields")
x <- zyields
vencimiento <- c(1/12, 3/12, 6/12, 9/12, 1:12)
rendimiento <- as.matrix(x[, 2:ncol(x)])
fecha <- as.Date(x[, 1], format = "%d.%m.%Y")
trcero <- zeroyields(vencimiento, rendimiento, fecha) #trcero tasa de rendimiento cero
trcero
curva2 <- function(x){
if( x=="nelsons"){
nels <- estim_nss(trcero , "ns", tauconstr = c(0.2, 6, 0.1))
plot(param(nels)) #evolución del parámetro del modelo de Nelson / Siegel
plot(nels) #Evolución de la curva de rendimiento estimada de cupón cero
} else if (x=="svensson"){
sven <- estim_nss(trcero , "sv", tauconstr = c(0.2, 5, 0.1, 0.5))
plot(param(sven)) #evolución del parámetro del modelo de Svensson
plot(sven) #Evolución de la curva de rendimiento estimada de cupón cero
}
}
curva("G/A/F")
library("termstrc")
data("govbonds")
govbonds
curva <- function(b){
if( b=="GERMANY"){
#estimar la curva de rendimiento de cupón cero para los tres países incluidos con el método de Nelson y Siegel
nelson <- estim_nss(govbonds, "GERMANY", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY") #Muestra los parametros de inicio
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="AUSTRIA"){
nelson <- estim_nss(govbonds, "AUSTRIA", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="FRANCE"){
nelson <- estim_nss(govbonds, "FRANCE", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$FRANCE, main = "FRANCE")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
}else if (b=="GERMANY/FRANCE/AUSTRIA"){
nelson <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"), method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(2, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY")
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
plot(nelson$spsearch$FRANCE, main = "FRANCE")
#plot(nelson$spsearch)
nelson
summary(nelson)
plot(nelson, multiple = F) #muestra las curvas de rendimiento estimadas de cupón cero
}
}
curva("GERMANY/FRANCE/AUSTRIA")
library("termstrc")
data("govbonds")
govbonds
curva <- function(b){
if( b=="GERMANY"){
#estimar la curva de rendimiento de cupón cero para los tres países incluidos con el método de Nelson y Siegel
nelson <- estim_nss(govbonds, "GERMANY", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$GERMANY, main = "GERMANY") #Muestra los parametros de inicio
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="AUSTRIA"){
nelson <- estim_nss(govbonds, "AUSTRIA", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
} else if (b=="FRANCE"){
nelson <- estim_nss(govbonds, "FRANCE", method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 2))
plot(nelson$spsearch$FRANCE, main = "FRANCE")
nelson
summary(nelson)
plot(nelson, multiple = TRUE) #muestra las curvas de rendimiento estimadas de cupón cero
}else if (b=="GERMANY/FRANCE/AUSTRIA"){
nelson <- estim_nss(govbonds, c("GERMANY", "AUSTRIA", "FRANCE"), method = "ns", tauconstr = list(c(0.2, 5, 0.1), c(0.2, 5, 0.1), c(0.2, 5, 0.1)))
par(mfrow = c(1, 1))
plot(nelson$spsearch$GERMANY, main = "GERMANY")
plot(nelson$spsearch$AUSTRIA, main = "AUSTRIA")
plot(nelson$spsearch$FRANCE, main = "FRANCE")
#plot(nelson$spsearch)
nelson
summary(nelson)
plot(nelson, multiple = T) #muestra las curvas de rendimiento estimadas de cupón cero
}
}
curva("GERMANY/FRANCE/AUSTRIA")
setwd("~/GitHub/Programacion_Actuarial_III_OT16/Caso 3/UCI HAR Dataset")
setwd("~/GitHub/Programacion_Actuarial_III_OT16/Caso 3/UCI HAR Dataset")
#Parte1) Juntar Datos
Juntarx<-rbind(read.table("./train/X_train.txt"),read.table("./test/X_test.txt"))
Juntary<-rbind(read.table("./train/Y_train.txt"),read.table("./test/Y_test.txt"))[,1]
JuntarSub<-rbind(read.table("./train/subject_train.txt"),read.table("./test/subject_test.txt"))
Titulo = read.table("./features.txt")
View(Titulo)
View(Juntarx)
colnames(Juntarx) <- Titulo[,2]
Mediastd = grepl('-(mean|std)\\(', Titulo[,2])
Juntarx = Juntarx[Mediastd]
View(Juntarx)
Act = as.character(read.table("./activity_labels.txt")[,2])
Juntary = Act[Juntary]
View(Juntary)
cambio = colnames(Juntarx)
View(cambio)
cambio = colnames(Juntarx)
View(cambio)
cambio = gsub("\\()", "", cambio)
View(cambio)
View(Juntarx)
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio = gsub("t", "T", cambio)
cambio = gsub("f", "F", cambio)
colnames(Juntarx) = cambio
Juntarx<-rbind(read.table("./train/X_train.txt"),read.table("./test/X_test.txt"))
Juntary<-rbind(read.table("./train/Y_train.txt"),read.table("./test/Y_test.txt"))[,1]
JuntarSub<-rbind(read.table("./train/subject_train.txt"),read.table("./test/subject_test.txt"))
Titulo = read.table("./features.txt")
#Parte2) Solo media y desviacion std
colnames(Juntarx) <- Titulo[,2]
Mediastd = grepl('-(mean|std)\\(', Titulo[,2])
Juntarx = Juntarx[Mediastd]
View(Titulo)
Act = as.character(read.table("./activity_labels.txt")[,2])
Juntary = Act[Juntary]
view(JuntarSub)
View(JuntarSub)
View(Juntarx)
Act = as.character(read.table("./activity_labels.txt")[,2])
Juntary = Act[Juntary]
View(Act)
cambio = colnames(Juntarx)
View(cambio)
cambio
cambio = gsub("\\()", "", cambio)
cambio
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio
cambio = gsub("Body Body", "Body", cambio)
cambio
cambio = gsub("Body Body", "Body", cambio)
cambio
cambio = gsub("-mean", "- Media", cambio)
cambio
cambio = gsub("t", "T", cambio)
cambio
cambio = colnames(Juntarx)
cambio = gsub("\\()", "", cambio)
cambio = gsub('([[:upper:]])', ' \\1', cambio)
cambio = gsub("Body Body", "Body", cambio)
cambio = gsub("\\-", " -", cambio)
cambio = gsub("-mean", "- Media", cambio)
cambio = gsub("-std", "- DesvEst", cambio)
cambio = gsub("t", "T", cambio)
cambio = gsub("f", "F", cambio)
colnames(Juntarx) = cambio
cambio
colnames(Juntarx) = cambio
Sujeto = JuntarSub
colnames(Sujeto) = "Sujeto"
Acción = Juntary
Final = cbind(Sujeto, Acción, Juntarx)
View(Final)
#Parte5)
library(dplyr) #debe estar instalado antes
library(dplyr) #debe estar instalado antes
prom_final <- Final %>% group_by(Sujeto,Acción) %>% summarise_each(funs(mean))
write.csv(prom_final,"Promedio de acciones.csv")
write.csv(MediasFinal, "Medias acciones.csv")
write.csv(MediasFinal, "Medias acciones.csv")
write.csv(MediasFinal, "Medias acciones.csv")
write.csv(Final, "Datos Ordenados.csv")
library(dplyr) #debe estar instalado antes
prom_final <- Final %>% group_by(Sujeto,Acción) %>% summarise_each(funs(mean))
write.csv(prom_final,"Promedio de acciones.csv")
write.csv(MediasFinal, "Medias acciones.csv")
?write.csv
prom_final
View(prom_final)
MediasFinal <- aggregate(Final[, 3:68], list(Final$Acción), mean)
write.csv(prom_final,"Promedio de acciones.csv")
write.csv(MediasFinal, "Medias acciones.csv")
write.csv(Final, "Datos Ordenados.csv")
